datalist(id='melee-weapons')
    each weapon in data
        if (!weapon.category.includes('Melee'))
            - continue;
        - let group = weapon.group || ''
        if (weapon.book !== 'PHB')
            - group += (group ? ', ' : '') + weapon.book 
        option(value=weapon.name)= group
            
datalist(id='ranged-weapons')
    each weapon in data
        if (!weapon.category.includes('Range'))
            - continue;
        - let group = weapon.group || ''
        if (weapon.book !== 'PHB')
            - group += (group ? ', ' : '') + weapon.book
        option(value=weapon.name)= group

datalist(id='all-weapons')
    each weapon in data
        - let group = weapon.group || ''
        if (weapon.book !== 'PHB')
            - group += (group ? ', ' : '') + weapon.book
        option(value=weapon.name)= group

- let usedWeapons = new Set();
datalist(id='weapon-proficiencies')
    - let book = 'PHB'
    - let weaponProfsAdded = false
    each weapon in data
        - weaponProfsAdded = false
        if (weapon.book !== book)
            - console.log(`Previous Book: ${book}. Next Book: ${weapon.book}`)
            each prof, profName in proficiencies
                if prof.book !== book
                    - continue
                option(value=profName)= prof.book
            - book = weapon.book
            - weaponProfsAdded = true
        if (weapon.noProf)
            - continue
        - let weaponName = weapon.name.split(/\s\(|,/)[0]
        if (usedWeapons.has(weaponName))
            - continue
        - usedWeapons.add(weaponName);
        - let group = weapon.group || ''
        if (weapon.book !== 'PHB')
            - group += (group ? ', ' : '') + weapon.book
        option(value=weaponName)= group
    if (!weaponProfsAdded)
        each prof, profName in proficiencies
            if prof.book !== book
                - continue
            option(value=profName)= prof.book