.matrix.pc-col
  .pc-row.matrix-box
    .header.right-header
      h1(data-i18n='matrix') Matrix
      .right-tri
    .header.right-header
      each val in ['cyberdeck', 'living persona']
        .header.htab
          .triangle
          if (val === 'cyberdeck')
            input.matrix-toggle(name='attr_matrix_toggle' title='@{matrix_toggle}' type='radio' value=val checked)
          else
            input.matrix-toggle(name='attr_matrix_toggle' title='@{matrix_toggle}' type='radio' value='persona')
          h1(data-i18n=val)
          .right-tri
    .border-box
      .pc-box.medium-box
        input.matrix-toggle(name='attr_matrix_toggle' type='hidden' value='cyberdeck')
        .cyberdeck
          include ../../html/matrix.html
          .rows.repeating-container.programs
            h2(data-i18n='programs') Programs
            fieldset(class=`repeating_programs`)
              input.toggle.indicator(name='attr_program_on' type='checkbox' checked)
              span.pictos Q
              span.eclipse(name='attr_program')
              button.pictos(name="program_chat" type="roll" value="@{gm_toggle} &{template:rolls}{{header=@{program}}}{{desc=@{notes}}}") w
              +repeatingSectionFlags()
              .settings
                label(data-i18n-title='programs' title='programs')
                  input(name='attr_program' placeholder='Program name' title='@{repeating_programs_${x}_program}' type='text' value='')
                +repeatingSectionNotes('programs')
        .persona
          .row.headers
            each val in ['attribute', 'total', 'temp', 'base']
              h3(data-i18n=val)
          each key, val in {'attack':'charisma', 'data_processing': 'logic', 'sleaze': 'intuition', 'firewall': 'willpower'}
            .row-long
              .attribute
                +matrixRolls(key, val)
              .total.text-center
                label(data-title-i18n=val)
                  input(min="0" name=`attr_persona_${val}` placeholder="0" title=`@{persona_${val}}` type='number' value=`@{${key}}+@{persona_${val}_temp}` disabled)
              .temp.text-center
                label(data-title-i18n=val)
                  input(min="0" name=`attr_persona_${val}_temp` placeholder="0" title=`@{persona_${val}_temp}` type='number' value="")
              .base.text-center
                span(name=`attr_${key}`)
          .rows.repeating-container.echos
            h2(data-i18n='echos') echos
            fieldset(class=`repeating_echos`)
              span.eclipse.font-bolder(name='attr_echo')
              button.pictos(name="echo_chat" type="roll" value="@{gm_toggle} &{template:rolls}{{header=@{echo}}}{{desc=@{notes}}}") w
              +repeatingSectionFlags()
              .settings
                label(data-i18n-title='echos' title='echos')
                  input(name='attr_echo' placeholder='echo name' title='@{repeating_echos_${x}_echo}' type='text' value='')
                +repeatingSectionNotes('echos')

  .pc-row
    .header.right-header
      h1(data-i18n='complex form') Complex Forms
      .right-tri
    .border-box
      .pc-box.medium-box.complex-forms
        +fadeDrainSection('fade')
        .rows.repeating-container
          - const formsrepeatingSection = `@{repeating_forms_` + "${x}";
          .row-long.headers
            each val in complexFormAttributes
              h2.text-capitalize(data-i18n=val)
          fieldset(class=`repeating_forms`)
            input(name='attr_dicepool' type='hidden' value='0')

            //- This button displays in the roll template in chat window
            button.display-none(name="roll_fade" type="roll" value="@{gm_toggle} &{template:rolls}{{mod=[[@{modifiers_toggle}]]}}{{edge=[[@{edge_toggle}]]}}{{header=^{fade}}}{{base=^{base}}}{{dice=[[((@{fade_attribute_1}+@{fade_attribute_2}+@{fade_modifier})+@{modifiers_toggle}+@{edge_toggle})d6>5@{explode_toggle}]]}}")

            +displayRollButton(pcComplexFormButton, true)
            - const complexFormSpans = complexFormAttributes.shift();
            each val in complexFormSpans
              span.text-center.eclipse(name=`attr_${val}`)
            +repeatingSectionFlags()
            .settings
              label(data-i18n-title='name' title='name')
                input(name='attr_name' placeholder='name' title=`${formsrepeatingSection}_name}` type='text' value='')
              select(name=`attr_target` title=`${formsrepeatingSection}_target}` value='Device')
                each val in formTargets
                  option.text-capitalize(data-i18n=val value=val) #{val}
              select(name=`attr_duration` title=`${formsrepeatingSection}_duration}` value='Instant')
                each val in formDurations
                  option.text-capitalize(data-i18n=val value=val)
              label(data-i18n-title='fade' title='fade')
                input(name='attr_fade'  placeholder='-1' title=`${formsrepeatingSection}_fade}` type='number' value='')
              .row
                h3(data-i18n='skill') skill
                select(name=`attr_skill` title=`${formsrepeatingSection}_skill}` value='@{software}')
                  option(data-i18n='electronicsgroup' value='@{electronics}') Electronics Group
                  option(data-i18n='software' value='@{software}' selected) Software
                h3(data-i18n='specialization')
                label(data-i18n-title='specialization' title='specialization')
                  input(name='attr_specialization' value='2' title=`${formsrepeatingSection}_specialization}` type='checkbox')
                h3(data-i18n='modifier') modifier
                label(data-i18n-title='modifier' title='modifier')
                  input(name='attr_dicepool_modifier' title=`${formsrepeatingSection}_dicepool_modifier}` type='number')
              +repeatingSectionNotes('forms')

