mixin label(i18n)
    label(data-i18n=i18n)&attributes(attributes)

mixin numeric_input(attr_name, default_value, min_value=null)
    if (min_value==null)
        input(name=`attr_${attr_name}` type="number" title=`\${${attr_name}}. Default: ${default_value}.` value=default_value min=min_value)&attributes(attributes)
    else
        input(name=`attr_${attr_name}` type="number" title=`\${${attr_name}}. Default: ${default_value}.` value=default_value)&attributes(attributes)

mixin text_input(attr_name)
        input(name=`attr_${attr_name}` type="text" title=`\${${attr_name}}. Default: ${default_value}.`)&attributes(attributes)

-
    const characteristics = [
        { category: 'body',   list: [ 'strength', 'dexterity',  'endurance' ] },
        { category: 'mind',   list: [ 'wits',     'perception', 'will'      ] },
        { category: 'spirit', list: [ 'presence', 'intuition', 'faith'      ] }
    ];

mixin characteristic(name)
        button.fs-d20(type='roll' name=`roll_${name}` value=`&{template:fs-GoalRoll} {{characterName=@{character_name}}} {{characteristicName-i18n=^{${name}}}} {{bonus_penalty=[[?{@{goal_bonus_penalty_rollquery_i18n}}]]}} {{goal=[[@{${name}}+[[?{@{goal_bonus_penalty_rollquery_i18n}}]]]]}} {{roll=[[1d20cs[[{@{${name}}+[[?{@{goal_bonus_penalty_rollquery_i18n}}]],19}kl1]]cf20]]}}`)
        label.fs-characteristic-label
            span(data-i18n=`${name}`)
        +numeric_input(name, 3)
-
    const skills = [
        { name: "academia", default: 3 },
        { name: "alchemy", default: 0 },
        { name: "animalia", default: 3 },
        { name: "arts", default: 3 },
        { name: "charm", default: 3 },
        { name: "crafts", default: 3 },
        { name: "disguise", default: 3 },
        { name: "drive", default: 3 },
        { name: "empathy", default: 3 },
        { name: "fight", default: 3 },
        { name: "focus", default: 3 },
        { name: "impress", default: 3 },
        { name: "interface", default: 0 },

        { name: "intrusion", default: 3 },
        { name: "knavery", default: 3 },
        { name: "melee", default: 3 },
        { name: "observe", default: 3 },
        { name: "perform", default: 3 },
        { name: "pilot", default: 0 },
        { name: "remedy", default: 3 },
        { name: "shoot", default: 3 },
        { name: "sleight_of_hand", default: 3 },
        { name: "sneak", default: 3 },
        { name: "survival", default: 3 },
        { name: "tech_redemption", default: 3 },
        { name: "vigor", default: 3 }
    ];

mixin skill(name, value)
    .fs-skill
        .fs-skill-normal
            button.fs-d20(type='roll' name='roll_disabledbutton' value='' disabled='')
            .fs-skill-roll-characteristic-choice
                label
                    span(data-i18n=`${name}`) #{name}
                    |  +
                each charac_cat in characteristics
                    each characteristicName in charac_cat.list
                        div
                            div
                                button.fs-d20(type='roll' name=`roll_${characteristicName}_${name}` value=`&{template:fs-GoalRoll} {{characterName=@{character_name}}} {{characteristicName-i18n=^{${characteristicName}}}} {{skillName-i18n=^{${name}}}} {{bonus_penalty=[[?{@{goal_bonus_penalty_rollquery_i18n}}]]}} {{goal=[[@{${characteristicName}}+@{${name}}+[[?{@{goal_bonus_penalty_rollquery_i18n}}]]]]}} {{roll=[[1d20cs[[{@{${characteristicName}}+@{${name}}+[[?{@{goal_bonus_penalty_rollquery_i18n}}]],19}kl1]]cf20]]}}`)
                                label(data-i18n=`${characteristicName}`) #{characteristicName}
            label.fs-skill-label
                span(data-i18n=`${name}`) #{name}
        +numeric_input(name, value)


// CHARACTER SHEET LAYOUT - START
.fs-sheet

    input(type="hidden" name="attr_goal_bonus_penalty_rollquery_i18n" value="")

    .fs-sheet-container
        input(type='hidden' name='attr_sheet_version' value='latest')

        .fs-baseinfo
            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='name')
                .fs-name-grid
                    +text_input('character_name')(class ="fs-name")
                    label.fs-planet(data-i18n="planet")
                    +text_input('planet')(class ="fs-planet")

            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='rank')
                .fs-rank-grid
                    +text_input('rank')(class ="fs-rank")
                    label.fs-birthdate(data-i18n="birthdate")
                    +text_input('birthdate')(class ="fs-birthdate")

            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='species')
                .fs-species-grid
                    +text_input('species')(class ="fs-species")
                    label.fs-size(data-i18n="size")
                    +text_input('size')(class ="fs-size")
                    label.fs-speed(data-i18n="speed")
                    +text_input('speed')(class ="fs-speed")

        .fs-lifepath
            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='class')
                .fs-class-grid
                    +text_input('class_1')(class ="fs-class1")
                    +text_input('class_2')(class ="fs-class2")
                    label.fs-level(data-i18n="level") Level
                    +numeric_input('level', 1, 1)(class="fs-level")

            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='faction')
                .fs-faction-grid
                    +text_input('faction')(class ="fs-faction")
                    label.fs-blessing-label(data-i18n="blessing")
                    +text_input('blessing')(class ="fs-blessing")
                    label.fs-curse(data-i18n="curse") Curse
                    +text_input('curse')(class ="fs-curse")

            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='calling')
                .fs-calling-grid
                    +text_input('calling_1')
                    +text_input('calling_2')
                    +text_input('calling_3')

        .fs-traits
            .fs-sheet-section.fs-skills-header
                h3.fs-uppercase-header(data-i18n='skills')

            .fs-skill-col.fs-skills-1
                - for (let i = 0; i < skills.length / 2; ++i)
                    +skill(skills[i].name, skills[i].default)

            .fs-skill-col.fs-skills-2
                - for (let i = skills.length / 2; i < skills.length; ++i)
                    +skill(skills[i].name, skills[i].default)

            .fs-characteristics
                each charac_cat in characteristics
                    .fs-sheet-section
                        h3.fs-uppercase-header(data-i18n=charac_cat.category)
                        .fs-characteristic-cat-grid
                            each charac_name in charac_cat.list
                                +characteristic(charac_name)

        .fs-sheet-section
            h3.fs-uppercase-header(data-i18n='occult')

        .fs-defenses
            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='resistances')
                .fs-resistances-grid
                    each charac_cat in characteristics
                        label(data-i18n=charac_cat.category)
                        +numeric_input(`${charac_cat.category}_resistance`, 0, 0)
                        +text_input(`${charac_cat.category}_resistance_modifier`)

            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='armor')
                h3.fs-uppercase-header(data-i18n='e-shield')

            .fs-sheet-section.fs-vita-and-revivals-grid
                h3.fs-vitality-header.fs-uppercase-header(data-i18n='vitality')
                label.fs-vitality-rating(data-i18n="rating")
                +numeric_input('vitality_rating', 0, 0)(class='fs-vitality-rating')
                label.fs-vitality-current(data-i18n="current")
                +numeric_input('vitality_current', 0, 0)(class='fs-vitality-current')
                h3.fs-revivals-header.fs-uppercase-header(data-i18n='revivals')
                label.fs-revivals-rating(data-i18n="rating")
                +numeric_input('revivals_rating', 0, 0)(class='fs-revivals-rating')
                label.fs-revivals-number(data-i18n="number")
                +numeric_input('vitality_current', 0, 0)(class='fs-revivals-current')

        .fs-actions-vp-bank-and-surge
            .fs-sheet-section
                h3.fs-uppercase-header(data-i18n='actions')
                
                .fs-actions
                    .fs-table
                        span.fs-table-head 
                        span.fs-table-head(data-i18n="action")
                        span.fs-table-head(data-i18n="characteristic")
                        span.fs-table-head(data-i18n="skill")
                        span.fs-table-head(data-i18n="goal_bonus_penalty")
                        span.fs-table-head(data-i18n="impact")
                    fieldset.repeating_actions
                        .fs-table
                            input(type="hidden" name="attr_action_characteristic_value")
                            input(type="hidden" name="attr_action_skill_value")
                            button.fs-20(type="roll" name="roll_action_roll" value="&{template:fs-GoalRoll} {{title=@{action_name}}} {{characterName=@{character_name}}} {{characteristicName-i18n=^{@{action_characteristic}}}} {{skillName-i18n=^{@{action_skill}}}} {{bonus_penalty=[[?{@{goal_bonus_penalty_rollquery_i18n}}]]}} {{goal=[[@{action_characteristic_value}+@{action_skill_value}+[[?{@{goal_bonus_penalty_rollquery_i18n}}]]}} {{roll=[[1d20cs[[{@{action_characteristic_value}+@{action_skill_value}+?{@{bonus_penalty_rollquery_i18n}},19}kl1]]cf20]]}}")
                            input.fs-table-cell(type="text" name="attr_action_name")
                            select.fs-table-cell(name="attr_action_characteristic")
                                option(value="" selected)
                                each charac_cat in characteristics
                                    optgroup(data-i18n-label=charac_cat.category)
                                    each charac_name in charac_cat.list
                                        option(data-i18n=charac_name)
                            select.fs-table-cell(name="attr_action_skill")
                                option(value="" selected)
                                each sk in skills
                                    option(value =`${sk.name}` data-i18n=`${sk.name}`) #{sk.name}
                            input.fs-table-cell(type="number" name="attr_action_goal_penalty" value=0)
                            input.fs-table-cell(type="text" name="attr_action_impact")
                            .fs-notes
                                .fs-auto-expand-textarea
                                    span(name="attr_action_notes")
                                    textarea(name="attr_action_notes" data-i18n-placeholder="notes" placeholder="Notes" spellcheck="false")

            .fs-sheet-section-frame
                h3.fs-uppercase-header(data-i18n='vp_bank')
                .fs-vp-and-surge-grids
                    label(data-i18n='vp_bank_capacity')
                    +numeric_input('vp_bank_capacity', 0, 0)
                    label(data-i18n='current_vp')
                    +numeric_input('current_vp', 0, 0)
                    label(data-i18n='current_wp')
                    +numeric_input('current_wp', 0, 0)
                h3.fs-uppercase-header(data-i18n='surge')
                .fs-vp-and-surge-grids
                    label(data-i18n='surge_rating')
                    +numeric_input('surge_rating', 0, 0)
                    label(data-i18n='surge_number')
                    +numeric_input('surge_number', 0, 0)

        .fs-sheet-section
            h3.fs-uppercase-header(data-i18n='perks')

        .fs-sheet-section
            h3.fs-uppercase-header(data-i18n='possessions')

        .fs-sheet-section
            h3.fs-uppercase-header(data-i18n='money')

        .fs-sheet-section
            h3.fs-uppercase-header(data-i18n='last_notes')
            .fs-w100.fs-relative.fs-supertall-textarea
                .fs-auto-expand-textarea
                    span(name="attr_last_notes")
                    textarea(title="@{last_notes}" type="text" name="attr_last_notes" data-i18n-placeholder="notes" placeholder="Notes" spellcheck="false")

        .fs-footer

// CHARACTER SHEET LAYOUT - END
// ROLL TEMPLATES - START
include roll-templates.html
// ROLL TEMPLATES - END
// SHEET WORKERS - START
include sheet-workers.html
// SHEET WORKERS - END

// FIN.
